name: Build and Release Signed APK
on:
  push:
    branches:
      - main
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Get app version info
        run: |
          chmod +x gradlew
          APPLICATION_ID_OUTPUT=$(./gradlew -q printApplicationId | tr -d '\n')
          VERSION_NAME_OUTPUT=$(./gradlew -q printVersionName | tr -d '\n')
          VERSION_CODE_OUTPUT=$(./gradlew -q printVersionCode | tr -d '\n')
          echo "Application Id Output: $APPLICATION_ID_OUTPUT"
          echo "Version Name Output: $VERSION_NAME_OUTPUT"
          echo "Version Code Output: $VERSION_CODE_OUTPUT"
          echo "APPLICATION_ID=$APPLICATION_ID_OUTPUT" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME_OUTPUT" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE_OUTPUT" >> $GITHUB_ENV
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build signed APK
        run: |
          chmod +x gradlew
          echo "${{ secrets.MY_KEYSTORE_BASE64 }}" | base64 --decode > release.keystore
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
          ls app/build/outputs/apk/release/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          VERSION_CODE: ${{ env.VERSION_CODE }}
          VERSION_NAME: ${{ env.VERSION_NAME }}
        with:
          tag_name: ${{ env.VERSION_NAME }}
          release_name: Release v${{ env.VERSION_CODE }}
          body: |
            Release version v${{ env.VERSION_NAME }}
          draft: false
          prerelease: false
      - name: Upload APK
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          APPLICATION_ID: ${{ env.APPLICATION_ID }}
          VERSION_CODE: ${{ env.VERSION_CODE }}
          VERSION_NAME: ${{ env.VERSION_NAME }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: ${{ env.APPLICATION_ID }}_${{ env.VERSION_CODE }}_${{ env.VERSION_NAME }}.apk
          asset_content_type: application/vnd.android.package-archive
